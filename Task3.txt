SQL> CREATE TYPE O_item AS OBJECT (
  2  ID INT,
  3  title VARCHAR(250) ) NOT FINAL NOT INSTANTIABLE;
  4  /

Tyyppi luotu.

SQL> CREATE TYPE O_book UNDER O_item (
  2  category VARCHAR(50) );
  3  /

Tyyppi luotu.

SQL> CREATE TYPE O_movie UNDER O_item (
  2  genre VARCHAR(50),
  3  ageGroup INT );
  4  /

Tyyppi luotu.

SQL> CREATE TABLE O_items OF O_item (
  2  ID PRIMARY KEY,
  3  title NOT NULL );
  4  /

Taulu luotu.



SQL> INSERT INTO O_items VALUES (
  2  O_book(
  3  1,
  4  'Cracking the Coding Interview  Programming Questions and Solutions',
  5  'Programming') );

1 rivi on luotu.

SQL> INSERT INTO O_items VALUES (
  2  O_book(
  3  2,
  4  'The Self-Taught Programmer The Definitive Guide to Programming Professionally',
  5  'Programming') );

1 rivi on luotu.

SQL> INSERT INTO O_items VALUES (
  2  O_book(
  3  3,
  4  'Data Science with Java Practical Methods for Scientists and Engineers',
  5  'Data Science') );

1 rivi on luotu.

SQL> INSERT INTO O_items VALUES (
  2  O_book(
  3  4,
  4  'Mediterranean Cookbook For Beginners, Lose Weight And Get Healthy',
  5  'Wellbeing') );

1 rivi on luotu.

SQL> INSERT INTO O_items VALUES (
  2  O_movie(
  3  5,
  4  'The Shape of Water',
  5  'Drama',
  6  16) );

1 rivi on luotu.

SQL> INSERT INTO O_items VALUES (
  2  O_movie(
  3  6,
  4  'Lady Bird',
  5  'Romance',
  6  16) );

1 rivi on luotu.

SQL> INSERT INTO O_items VALUES (
  2  O_movie(
  3  7,
  4  'Star Wars The Last Jedi',
  5  'Action',
  6  16) );

1 rivi on luotu.

SQL> INSERT INTO O_items VALUES (
  2  O_movie(
  3  8,
  4  'The Florida Project',
  5  'Comedy',
  6  5) );

1 rivi on luotu.

SQL> INSERT INTO O_items VALUES (
  2  O_movie(
  3  9,
  4  'Movie Title',
  5  'X-rated',
  6  18) );

1 rivi on luotu.




SQL> CREATE TYPE O_customer AS OBJECT (
  2  ID INT,
  3  name VARCHAR(250),
  4  email VARCHAR(250),
  5  bdate date);
  6  /

Tyyppi luotu.

SQL> CREATE TABLE O_customers OF O_customer (
  2  ID PRIMARY KEY,
  3  name NOT NULL);

Taulu on luotu.



SQL> INSERT INTO O_customers VALUES (
  2  1,
  3  'Niko Hartikainen',
  4  'niko.hartikainen@gmail.com',
  5  '01.01.1987');

1 rivi on luotu.

SQL> INSERT INTO O_customers VALUES (
  2  2,
  3  'Pasi Untamo Hintikka',
  4  'pasi.hintikka@gmail.com',
  5  '10.05.1977');

1 rivi on luotu.

SQL> INSERT INTO O_customers VALUES (
  2  3,
  3  'Tapio Nevala',
  4  'tapio.nevala@gmail.com',
  5  '31.01.1988');

1 rivi on luotu.

SQL> INSERT INTO O_customers VALUES (
  2  4,
  3  'Kaarina Pokka',
  4  'kaarina.pokka@gmail.com',
  5  '01.01.1990');

1 rivi on luotu.

SQL> INSERT INTO O_customers VALUES (
  2  5,
  3  'Esteri Mari Ihalainen',
  4  'esteri.ihalainen@gmail.com',
  5  '12.02.2002');

1 rivi on luotu.

SQL> INSERT INTO O_customers VALUES (
  2  6,
  3  'Milja Niina Pennanen',
  4  'milja.pennanen@gmail.com',
  5  '20.02.1986');

1 rivi on luotu.

SQL> INSERT INTO O_customers VALUES (
  2  7,
  3  'Emma Jalonen',
  4  'emma.jalonen@gmail.com',
  5  '19.07.1987');

1 rivi on luotu.

SQL> INSERT INTO O_customers VALUES (
  2  8,
  3  'Juuso Risto Rannisto',
  4  'juuso.ranninen@gmail.com',
  5  '05.05.1970');

1 rivi on luotu.



SQL> CREATE TYPE O_loan AS OBJECT (
  2  borrowDate date,
  3  returnDate date,
  4  customer REF O_customer,
  5  item REF O_item);
  6  /

Tyyppi luotu.

SQL> CREATE TABLE O_loans OF O_loan;

Taulu on luotu.





UPDATES:

SQL> O_LOANS SET borrowDate = TO_DATE('01.02.2014','DD.MM.YYYY'),
returnDate = TO_DATE('10.02.2014','DD.MM.YYYY') 
WHERE customer = (SELECT REF(P) FROM O_CUSTOMERS P WHERE P.ID =1);

SQL> O_LOANS SET borrowDate = TO_DATE('05.02.2014','DD.MM.YYYY')
WHERE customer = (SELECT REF(P) FROM O_CUSTOMERS P WHERE P.ID =6);

SQL> UPDATE O_LOANS SET borrowDate = TO_DATE('08.02.2014','DD.MM.YYYY')
WHERE customer = (SELECT REF(P) FROM O_CUSTOMERS P WHERE P.ID =2);

SQL> UPDATE O_LOANS SET borrowDate = TO_DATE('09.02.2014','DD.MM.YYYY')
WHERE customer = (SELECT REF(P) FROM O_CUSTOMERS P WHERE P.ID =5);



QUERIES:

SQL> SELECT C.NAME, IT.TITLE FROM O_ITEMS IT, O_LOANS L, O_CUSTOMERS C WHERE
L.ITEM.ID = IT.ID AND C.ID = L.CUSTOMER.ID
AND VALUE(IT) IS OF (O_MOVIE)
AND TREAT (VALUE(IT) AS O_MOVIE) .genre ='Romance';

SQL> SELECT IT.TITLE FROM O_ITEMS IT, O_LOANS L WHERE L.ITEM.ID = IT.ID AND L.returnDate IS NULL;

SQL> SELECT C.NAME, IT.TITLE, L.borrowDate, C.bdate FROM O_ITEMS IT, O_LOANS L, O_CUSTOMERS C WHERE 
L.ITEM.ID = IT.ID AND C.ID = L.CUSTOMER.ID
AND VALUE(IT) IS OF (O_MOVIE)
AND TREAT (VALUE(IT) AS O_MOVIE) .agegroup = 18
AND C.bdate > '01.02.1996';




































